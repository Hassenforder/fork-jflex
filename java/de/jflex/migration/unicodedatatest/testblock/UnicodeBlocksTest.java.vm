/*
 * Copyright (C) 2021 Google, LLC.
 * SPDX-License-Identifier: BSD-3-Clause
 */
package de.jflex.testcase.unicode.unicode_${unicodeVersion.underscoreVersion()};

import static com.google.common.truth.Truth.assertThat;

import com.google.common.collect.ImmutableList;
import de.jflex.testing.unicodedata.UnicodeDataScanners;
import de.jflex.ucd.NamedCodepointRange;
import de.jflex.util.scanner.ScannerFactory;
import javax.annotation.Generated;
import org.junit.Test;

/** Test that parsing all Unicode codepoints detects the correct block ranges for Unicode ${unicodeVersion}. */
@Generated("de.jflex.migration.unicodedatatest.testblock.BlocksTestGenerator")
public class UnicodeBlocksTest_${unicodeVersion.underscoreVersion()} {
  @Test
  public void testBlocks() throws Exception {
    UnicodeBlocks_${unicodeVersion.underscoreVersion()} scanner = UnicodeDataScanners
        .scanAllCodepoints(
            ScannerFactory.of(UnicodeBlocks_${unicodeVersion.underscoreVersion()}::new),
            UnicodeBlocks_${unicodeVersion.underscoreVersion()}.YYEOF,
            UnicodeDataScanners.Dataset.${dataset});
    assertThat(scanner.blocks()).containsExactly(
        #set($separator="")
        #foreach ( $b in $blocks )
        $separator NamedCodepointRange.create("${b.name()}", 0x${b.hexStart()}, 0x${b.hexEnd()})
        #set($separator = ",")
        #end
        );
  }
}
